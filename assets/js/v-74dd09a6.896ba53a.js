(self.webpackChunkLunarVim_com=self.webpackChunkLunarVim_com||[]).push([[190],{9251:(a,n,e)=>{"use strict";e.r(n),e.d(n,{data:()=>s});const s={key:"v-74dd09a6",path:"/languages/",title:"Languages",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Formatting",slug:"formatting",children:[]},{level:2,title:"Linting",slug:"linting",children:[]}],filePathRelative:"languages/README.md",git:{updatedTime:1627571713e3,contributors:[]}}},1290:(a,n,e)=>{"use strict";e.r(n),e.d(n,{default:()=>p});var s=e(6252);const t=(0,s.uE)('<h1 id="languages" tabindex="-1"><a class="header-anchor" href="#languages" aria-hidden="true">#</a> Languages</h1><p>LunarVim strives to have basic LSP, linting, formatting and syntax support for all major languages.</p><p>If your language is not supported please do the following:</p><ul><li><p>Check if LSP support is available in the lspconfig repo</p></li><li><p>Check if your linter or formatter is available in the null-ls repo</p></li><li><p>Check if your syntax is supported in the treesitter repo</p></li></ul><p>If there is support for your language please file an issue with the LunarVim repo</p><p>If there is not file a ticket with one of the above repos</p><h2 id="formatting" tabindex="-1"><a class="header-anchor" href="#formatting" aria-hidden="true">#</a> Formatting</h2>',7),l=(0,s.Uk)("Formatting is handled by by your language server or Null-ls. Not all formatters are supported. For a list of supported formatters and linters "),i={href:"https://github.com/jose-elias-alvarez/null-ls.nvim/blob/main/doc/BUILTINS.md#available-sources",target:"_blank",rel:"noopener noreferrer"},o=(0,s.Uk)("look here"),r=(0,s.uE)('<p>The language server will provide basic formatting. If you need to use a specific formatting tool, set it with.</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>cpp<span class="token punctuation">.</span>formatter<span class="token punctuation">.</span>exe <span class="token operator">=</span> <span class="token string">&quot;asmfmt&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>To enable format on save, add the following to your <code>lv-config.lua</code></p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>format_on_save <span class="token operator">=</span> <span class="token keyword">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="linting" tabindex="-1"><a class="header-anchor" href="#linting" aria-hidden="true">#</a> Linting</h2><p>Linting is handled by Null-ls. To set a linter for your language:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lang<span class="token punctuation">.</span>cpp<span class="token punctuation">.</span>linters <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;cppcheck&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;clangtidy&quot;</span><span class="token punctuation">}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>To enable linting on save:</p><div class="language-lua ext-lua line-numbers-mode"><pre class="language-lua"><code>lvim<span class="token punctuation">.</span>lint_on_save <span class="token operator">=</span> <span class="token keyword">true</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',9),p={render:function(a,n){const e=(0,s.up)("OutboundLink");return(0,s.wg)(),(0,s.j4)(s.HY,null,[t,(0,s.Wm)("p",null,[l,(0,s.Wm)("a",i,[o,(0,s.Wm)(e)])]),r],64)}}}}]);